/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linter;

import java.util.HashSet;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Arrays;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;



public class App {

    public static String checkSemicolons(String filePath) {
        String errorMessage = "";
        try {
            BufferedReader reader = new BufferedReader(new FileReader(filePath));
            String line = reader.readLine();
            int lineNumber = 1;

            while (line != null) {
                line = line.trim();

                if (!line.isEmpty() && !line.endsWith("{") && !line.endsWith("}") && !line.contains("if") && !line.contains("else") && !line.endsWith(";")) {
                    errorMessage += "Line " + lineNumber + ": Missing semicolon.\n";
                }

                line = reader.readLine();
                lineNumber++;
            }

            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

        return errorMessage;
    }










public static String analyzeWeatherData(int[][] data) {
        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;

        HashSet<Integer> temperatures = new HashSet<>();

        for (int[] weeklyTemperatures : data) {
            for (int temperature : weeklyTemperatures) {
                if (temperature < min) {
                    min = temperature;
                }
                if (temperature > max) {
                    max = temperature;
                }
                temperatures.add(temperature);
            }
        }
        String result = "High: " + max + "\n" +
                "Low: " + min + "\n";
        for (int temperature = min; temperature <= max; temperature++) {
            if (!temperatures.contains(temperature)) {
                result += "Never saw temperature: " + temperature + "\n";
            }
        }
        return result;
    }

    public static String tally(List<String> votes) {
        Map<String, Integer> voteCount = new HashMap<>();
        int maxCount = 0;
        String maxVote = "";

        for (String vote : votes) {
            int count = voteCount.getOrDefault(vote, 0) + 1;
            voteCount.put(vote, count);

            if (count > maxCount) {
                maxCount = count;
                maxVote = vote;
            } else if (count == maxCount && vote.compareTo(maxVote) < 0) {
                maxVote = vote;
            }
        }

        return maxVote + " received the most votes with " + maxCount + " votes.";
    }




    public static void main(String[] args) {
        String filePath = "basiclibrary/linter/app/src/main/resources/gates.js";
        String errorMessage = checkSemicolons(filePath);
        System.out.println(errorMessage);

        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        String expectedOutput = "High: 72\n" +
                "Low: 51\n" +
                "Never saw temperature: 63\n" +
                "Never saw temperature: 67\n" +
                "Never saw temperature: 68\n" +
                "Never saw temperature: 69\n";
        String actualOutput = analyzeWeatherData(weeklyMonthTemperatures);
        System.out.println(actualOutput.equals(expectedOutput));

        List<String> votes = Arrays.asList("A", "B", "C", "A", "A", "B", "B", "C", "C", "C", "D");
        String result = App.tally(votes);
        System.out.println(result);
    }


}

